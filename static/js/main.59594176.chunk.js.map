{"version":3,"sources":["assets/profil.jpg","components/AddClient.jsx","components/TaskRender.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddClient","props","useState","denomination","observation","type","dateEcheance","task","updateTask","db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getFirestore","addDoc","a","newTask","setDoc","doc","console","log","refreshClients","className","placeholder","onChange","e","target","value","onClick","TaskRender","this","details","Component","App","clients","setClients","isLoading","setLoading","useEffect","fetchClient","getDocs","collection","response","updatedClients","forEach","push","data","src","profil","map","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59594176.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profil.074e3342.jpg\";","import { Component, useState } from \"react\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\nimport \"./AddClient.css\";\nconst AddClient = (props) => {\n\n  const [task,updateTask] = useState(\n    {\n      denomination : \"\",\n      observation : \"\",\n      type : \"\",\n      dateEcheance : \"\"\n    }\n  );\n\n  const firebaseConfig = initializeApp({\n    apiKey: \"AIzaSyBKBG-_UGj4KaIa25Mcw8TUlzNkV9KlhQM\",\n    authDomain: \"businessapp-fd40d.firebaseapp.com\",\n    databaseURL:\n      \"https://businessapp-fd40d-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"businessapp-fd40d\",\n    storageBucket: \"businessapp-fd40d.appspot.com\",\n    messagingSenderId: \"196058071623\",\n    appId: \"1:196058071623:web:cf32e27791f6f6fca02762\",\n  });\n  const db = getFirestore();\n\n  const addDoc = async () => {\n    const newTask = {\n      denomination : \"\",\n      observation : \"\",\n      type : \"\",\n      dateEcheance : \"\"\n    }\n    // Add a new document in collection \"cities\"\n    const req = await setDoc(doc(db, \"tasks\", task.denomination), \n      task\n      );\n    console.log(task);\n    updateTask(newTask);\n    props.refreshClients();\n  };\n\n  return (\n    <div className=\"addTask\">\n      <input placeholder=\"Denomination\" onChange={(e) => updateTask({ ...task, denomination: e.target.value })} value={task.denomination}></input>\n      <input placeholder=\"Observation\" onChange={(e) => updateTask({ ...task, observation: e.target.value })} value={task.observation}></input>\n      <input placeholder=\"Type\" onChange={(e) => updateTask({ ...task, type: e.target.value })} value={task.type}></input>\n      <input placeholder=\"Date d'échéance\" onChange={(e) => updateTask({ ...task, dateEcheance: e.target.value })} value={task.dateEcheance}></input>\n      <button className=\"buttonAddTask\" onClick={addDoc}>\n        Ajouter tâche\n      </button>\n    </div>\n  );\n}\n\nexport default AddClient;\n\n\n","import { Component } from \"react\";\nimport \"./TaskRender.css\"\n\nclass TaskRender extends Component {\n\n  render() {\n    return (\n      <div>\n        <div className=\"task\">\n          <p className=\"denomination\">{this.props.details.denomination}</p>\n          <p className=\"observation\">{this.props.details.observation}</p>\n          <p className=\"type\">{this.props.details.type}</p>\n          <p className=\"dateEcheance\">{this.props.details.dateEcheance}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskRender;\n\n","import profil from \"./assets/profil.jpg\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport AddClient from \"./components/AddClient.jsx\";\nimport { initializeApp } from \"firebase/app\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\nimport TaskRender from \"./components/TaskRender.jsx\";\n\nfunction App() {\n  const [clients, setClients] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const firebaseConfig = initializeApp({\n    apiKey: \"AIzaSyBKBG-_UGj4KaIa25Mcw8TUlzNkV9KlhQM\",\n    authDomain: \"businessapp-fd40d.firebaseapp.com\",\n    databaseURL:\n      \"https://businessapp-fd40d-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"businessapp-fd40d\",\n    storageBucket: \"businessapp-fd40d.appspot.com\",\n    messagingSenderId: \"196058071623\",\n    appId: \"1:196058071623:web:cf32e27791f6f6fca02762\",\n  });\n  const db = getFirestore();\n\n  useEffect(() => {\n    if (isLoading) {\n      fetchClient();\n    }\n    console.log(\"Composant monté\");\n    console.log(clients);\n  }, [isLoading]);\n\n  const fetchClient = async () => {\n    const response = await getDocs(collection(db, \"tasks\"));\n    const updatedClients = [];\n    response.forEach((doc) => {\n      updatedClients.push(doc.data());\n    });\n    setClients(updatedClients);\n    setLoading(false);\n  };\n\n  return (\n    <header>\n      <div className=\"App-header\">\n        <div className=\"header\">\n          <img className=\"profil\" src={profil} />\n          <p>\n            Bienvenue <strong>Briac</strong>,\n          </p>\n        </div>\n        <div className=\"content\">\n          <p className=\"subtitle\">Prochaine tâche :</p>\n          {clients.map((client) => (\n            <TaskRender key={client.denomination} details={client} />\n          ))}\n          <p className=\"subtitle\">Que souhaitez vous faire ?</p>\n          <div className=\"content_a\">\n            <button className=\"buttonAddClient\">Créer client</button>\n            <button className=\"buttonShow\">Consulter mission</button>\n          </div>\n          <AddClient refreshClients={fetchClient}></AddClient>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}